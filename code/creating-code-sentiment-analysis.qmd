---
title: "감성 분석 코드 작성"
editor: visual
---

## API를 통해 감성 분석을 실행하는 코드 작성.

다음은 우리가 만든 몇 가지 프롬프트입니다. 따르십시오. 디버깅이 필요합니다.

먼저 [data/interviews](/data/interviews/interview-texts-only.xlsx)에서 `interview-texts-only.xlsx`를 다운로드합니다.

> OpenAI의 GPT API를 사용하여 경기 후 감독 인용문의 감성 분석을 위한 Python 스크립트를 작성하십시오. 다음 세부 사양을 따르십시오.
>
> #### 🎯 **작업 개요**
>
> - 각 인용문을 **경기 결과가 아닌 감독의 어조**를 기준으로 -2에서 2까지의 감성 척도로 분류합니다.
>
> - 스크립트는 xlsx 파일을 처리하고 감성 점수가 포함된 새 CSV를 생성해야 합니다.
>
> #### 📁 **입력 파일**
>
> - `interview-texts-only.xlsx`를 로드합니다.
>
> - `utf-8` 인코딩을 사용합니다.
>
> - 읽을 때 잘못된 형식의 줄은 건너뜁니다.
>
> #### 🧠 **GPT 분류 논리**
>
> - OpenAI의 `gpt-4.1-2025-04-14` 모델 (또는 이전 버전과 호환되는 GPT-4 모델)을 사용합니다.
>
> - 다음을 수행하는 **자세한 프롬프트**를 구성합니다.

## 작업:

각 텍스트를 주의 깊게 읽고 감독의 진술에 대한 전반적인 감성을 긍정적 또는 부정적으로 평가하십시오.
평가는 경기에 대한 귀하의 판단이 아닌 감독이 표현한 어조를 반영해야 합니다.

## 평가 척도:

| **점수** | **의미** |
|----------|------------|
| **2** | 매우 긍정적인 감성 (명확한 낙관주의, 만족, 칭찬). |
| **1** | 약간 긍정적인 감성 (일반적으로 긍정적, 약간의 유보). |
| **0** | 중립적이거나 불분명한 감성. |
| **-1** | 약간 부정적인 감성 (일반적인 실망, 좌절). |
| **-2** | 매우 부정적인 감성 (명확한 비판, 상당한 실망). |

### 최종 참고 사항:
- 확실하지 않거나 감성이 명확한 우위 없이 혼합된 경우 **0**을 사용하십시오.

>
> - API 호출이 실패하면 최대 3번 재시도하고 지수 백오프를 사용합니다 (예: 1초, 2초, 4초 대기).
>
> -
>
> - 응답이 정수가 아니면 `None`을 반환합니다.
>
> -
>
> #### 🔐 **API 인증**
>
> -
>
> - `openai` Python 패키지 (v1+)를 사용합니다.
>
> -
>
> - `OPENAI_API_KEY` 키를 사용하여 `.env` 파일에서 API 키를 안전하게 로드합니다.
>
> -
>
> - 키가 없으면 오류와 함께 종료합니다.
>
> -
>
> #### 🧪 **처리 및 출력**
>
> -
>
> - 진행 상황을 위해 `tqdm`을 사용하여 모든 행을 반복합니다.
>
> -
>
> - 각 행에 대해 GPT 모델을 호출하고 결과를 수집합니다.
>
> -
>
> - 결과 (`text_id`, `score`)를 `manager_sentiment_results.csv`에 저장합니다.
>
> -
>
> - 마지막에 점수 빈도표를 인쇄하고 기록합니다.
>
> -
>
> #### 🪵 **로깅**
>
> -
>
> - Python의 `logging` 모듈을 사용합니다.
>
> -
>
> - 다음을 수행하도록 구성합니다.
>
>     -
>
>     - 콘솔 (`stdout`)과 파일 `classification.log` (덮어쓰기 모드) 모두에 기록합니다.
>
>     -
>
>     - 형식 사용: `[타임스탬프] [수준] [메시지]`
>
>     -
>
>     - 수준을 `INFO`로 설정합니다.
>
>     -
>
> -
>
> - 주요 이벤트 기록:
>
>     -
>
>     - API 호출 시작
>
>     -
>
>     - API 응답
>
>     -
>
>     - 처리된 행 수
>
>     -
>
>     - 누락된 열
>
>     -
>
>     - 최종 점수 분포
>
>     -
>
> -
>
> #### 📦 **종속성**
>
> -
>
> - `pandas`
>
> -
>
> - `tqdm`
>
> -
>
> - `openai`
>
> -
>
> - `dotenv`
>
> -
>
> #### 🔁 **추가 사항**
>
> -
>
> - 다음을 위한 함수 사용:
>
>     -
>
>     - CSV 로드,
>
>     -
>
>     - 텍스트 분류,
>
>     -
>
>     - 오류 처리.
>
>     -
>
> -
>
> - 스크립트 상단에 `#!/usr/bin/env python3`을 사용하여 직접 실행할 수 있도록 합니다.
>
> -

정확한 프롬프트 메시지 문자열을 생성하거나 이 섹션을 README 섹션으로 바꾸려면 알려주십시오.
