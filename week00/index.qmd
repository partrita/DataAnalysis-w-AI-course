---
title: "Week 00: AI-Assisted Coding Prep"
subtitle: "Enhancing Data Analysis Coding Skills with AI Tools"
date: "2025-06-01"
---

:::::: hero-section
::::: container
::: hero-title
Week 00: AI-Assisted Coding Prep
:::

::: hero-subtitle
Enhancing Data Analysis Coding Skills with AI Tools
:::
:::::
::::::

------------------------------------------------------------------------

![](../images/week0_pic.png)

## Learning Objectives

By the end of this session, students will be able to:

- Understand how AI is transforming coding workflows for data analysis tasks.
- Learn effective prompting strategies for generating data analysis code.
- Experience key AI coding tools: ChatGPT Canvas, Claude Projects, GitHub Copilot.
- Practice AI-assisted coding for common data analysis tasks.
- Set up integrated development environments with AI assistance.
- Focus on R and Python.

## Preparation / Before Class

::::: {.week-card .card}
::: card-header
üîß **Tool Setup**
:::
::: card-body

**Required Access:**

- ChatGPT account (free tier sufficient for testing)
- Claude account (free tier sufficient)

**Recommended Setup:**

- GitHub account for Copilot (free for students)
- VSCode, RStudio, or Jupyter Notebook installed
- Preferred data analysis language ready (R/Python)
- Much of this can be leveraged for other languages too, like SQL, Stata, or Julia.

**Optional but Useful:**

- Cursor AI editor (free trial available)

:::
:::::

## Class Material

::::: {.week-card .card}
::: card-header
ü§ñ **Why AI + Data Analysis Coding Works (20 min)**
:::

::: card-body
**Key Task Scope:**

- **Repetitive Patterns:** Data analysis has common workflows (load ‚Üí clean/wrangle ‚Üí analyze ‚Üí visualize).
- **Well-Documented Libraries:** pandas, scikit-learn, but also dplyr, ggplot2 are extensively in AI training data (they have been around for a while). With updates, they know more of more recent libraries from tensorflow to fixest (R).
- **Clear Intent:** "Create a scatterplot with a regression line" is specific enough for good code generation. Well established "best practice".
- **Iterative Nature:** Data analysis involves much tweaking and refinement, the chat aspect is useful.

**Where AI Excels:**

- Well-defined code chunks and setup (libraries, dependencies)
- Syntax, how exactly to do certain coding tasks (regex, loops, etc.)
- Standard statistical procedures
- Data manipulation and cleaning
- Basic visualization code

**Where Human Oversight and Decisions are Needed:**

- Most code
- Research design decisions
- Statistical/econometric interpretation
- Domain-specific logic
- Finalizing questions (vs just suggesting)
- Quality control and validation
:::
:::::

::::: {.week-card .card}
::: card-header
üìù **Effective Prompting for Data Analysis (25 min)**
:::

::: card-body
**Model recommendations:**

* ChatGPT 4o / Claude Sonnet 4. work about equally well.

### Best Practices for Prompting

Some ideas to help you get the code you want, or at least close enough.

**Be Specific**

- **Specify libraries:** "Using pandas and seaborn..." vs "Using R and ggplot2..."
- **Include data structure:** "DataFrame with columns: date, price, volume"
- **Define output format:** "Save as PNG for publication" or "Return a cleaned data table" or "Return markdown (latex) text with equation"

**Define language, preferences**

- I use R and the tidyverse, so if I do not specify it will use that.
- I use Python and prefer polars over pandas if possible.
- Ask for comments: "Include detailed comments explaining each step"

**For frequent tasks, AI knows which library to use in a language**

- **Filter for size<5** -- will do it in Python Pandas by default
- **Scatterplot of sales and employment** -- will do it in R with seaborn / matplotlib or ggplot

**Advice on including data structure**

- If possible, upload data
- Otherwise, upload a bit of data, like a 1/1000 random sample
- Start with creating a data dictionary (see [Week 03](/week03))

### Example Prompts

You can experiment with vague prompts vs specific ones.

**Example Prompt 1: Broad**

```
"Here's some sales data. Summarize regional variation."
```

vs.

**Example Prompt 2: Detailed**

```
"Create Python (R) code using pandas (dplyr) to:

1) Load CSV with columns: id, date, sales, region
2) Filter for 2023 data
3) Group by region and calculate mean sales
4) Create bar chart with plotnine / ggplot2"
```

What are the pros and cons of each?

### Some tasks where AI works well

*1. Data Cleaning Pipelines
*2. Exploratory Data Analysis
*3. Statistical Modeling
*4. Machine Learning Pipelines

:::
:::::


::::: {.week-card .card}
::: card-header
üìù **Exercise in Creating Graphs (40 min)**
:::

::: card-body
**One full exercise**

I created one example on the [gender wage gap](/week00/assets/creating-graphs.html).

This follows the case study in [Chapter 09](https://gabors-data-analysis.com/casestudies/#ch09a-estimating-gender-and-age-differences-in-earnings).

It starts with real life earnings data from the US, called CPS MORG.

This is what it results in:

![A nice heatmap](../images/earnings-heatmap.png)

**Other ideas**

* Instructor may have own dataset and exercise. There is a lot of material here [Case studies](https://gabors-data-analysis.com/casestudies/), each case study comes with [data](https://osf.io/7epdj/).

:::
:::::


## Setting up tools

::::: {.week-card .card}
::: card-header
üõ†Ô∏è **AI Coding Tools Showcase (30 min)**
:::

::: card-body
**ChatGPT Tools:**

- **Canvas:** Collaborative coding environment for iterative development
- **Advanced Data Analysis:** Upload datasets, generate analysis with code execution
- **GPT-4.1:** Optimized specifically for coding tasks

**Claude Tools:**

- **Projects:** Upload entire datasets and documents for context-aware coding
- **Artifacts:** Code generation with real-time preview and editing
- **Claude 4 Sonnet:** Powerful reasoning for complex analytical workflows

**Specialized Coding Tools:**

- **GitHub Copilot:** Inline code completion integrated into existing editors
- **Cursor AI:** AI-first code editor with context-aware suggestions
- **Replit:** Browser-based coding with AI assistance features

**Hands-on Demo:**

- Upload sample dataset to ChatGPT Advanced Data Analysis
- Create a Claude Project with course data
- Compare code generation approaches
:::
:::::




::::: {.week-card .card}
::: card-header
‚ö° **GitHub Copilot Integration (20 min)**
:::

::: card-body
**Setup in Different Environments:**

**VSCode:**

- Install GitHub Copilot extension
- Authenticate with GitHub account
- Use Ctrl+Space for suggestions, Tab to accept

**Jupyter Notebook:**

- Install via VS Code Jupyter extension or JupyterLab extension
- Inline suggestions while typing
- Use Copilot Chat for longer explanations

**RStudio:**

- Enable GitHub Copilot in Global Options > Code > Completion
- Works with R scripts and R Markdown
- Suggests tidyverse and base R patterns

**Workflow Best Practices:**

- Write descriptive comments before code blocks
- Use meaningful variable names to guide suggestions
- Accept and then modify suggestions as needed
- Use Copilot Chat for explanations and debugging
:::
:::::



## Discussion Questions

**Reflection:**

- Which AI tool felt most natural for your coding style?
- Where did AI suggestions surprise you (positively or negatively)?
- How might this change your typical data analysis workflow?
- What validation steps would you add when using AI-generated code?

## Background, tools and resources

**Getting Started:**

- [GitHub Student Pack](https://education.github.com/pack) -- free Copilot access
- [Cursor AI](https://www.cursor.com/) -- AI-first code editor
- [OpenAI Codex Cookbook](https://github.com/openai/openai-cookbook) -- advanced prompting examples

**Key Insight:** AI coding assistance is most powerful when you understand the underlying concepts. Use AI to accelerate implementation, not replace understanding.

**Next Week:** [Week 01 - LLM Review](../week01/) will explore broader AI concepts for data analysis.

## Some personal notes on AI and this class

- This class is called Week 00, but it was created last. You probably guessed it.
- AI (Claude 4.0) created much of this class, following a [detailed prompt](assets/week00-ask-ai). I also asked it whether to keep it as Week 00 or change all numbering. It gave a great answer.
