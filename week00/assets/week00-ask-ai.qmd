---
title: "00주차의 이름"
date: "2025-06-01"
---

## 과정 설계

# Claude 4.0용 프롬프트
(2025-06-01)

::: {.week-card .card}
::: {.card-header}
🔧 **00주차라는 이름 괜찮을까요?**
  :::
  ::: {.card-body}

**Gábor**:
"새로운 주간 자료를 추가할 계획인데, 일단 00주차라고 부르겠습니다. 데이터 분석을 위한 코딩과 관련된 준비 과정입니다. 즉, 모든 종류의 내용이 아니라 데이터 정리, 분석, ML, 인과 추론 등 일부 데이터 과학도 포함됩니다.

설계를 도와주시겠습니까? 몇 가지 아이디어가 있습니다. 다음과 같아야 합니다.
* AI가 특히 Python과 R에서 코딩을 어떻게 도울 수 있는지에 대한 아이디어를 소개합니다.
* 왜 효과가 있는지
* 좋은 답변을 얻기 위해 가장 좋은 프롬프트를 작성하는 방법, claude와 chatgpt에서 사용할 모델. 또는 모델 간의 차이점은 무엇입니까?
* 사용 사례의 예를 제공합니다. 4가지 예, 각 2-4줄.
* chatgpt, 프로젝트의 데이터 분석 및 캔버스와 같은 사용 가능한 추가 도구를 보여줍니다.
* 커서와 같은 다른 코드 관련 도구에 대해 이야기합니다.
* github copilot에 대해 이야기합니다.
* (a) vscode, (b) jupyter notebook, (c) Rstudio에서 github copilot을 사용하는 방법을 논의합니다. 워크플로에서 사용하는 방법을 설명합니다.

첫 번째 버전은 간략하고 개략적이어야 합니다. 점차 확장할 것입니다."

그러면 현재 버전은 매우 가깝습니다.

::
::

## 이름 지정

::: {.week-card .card}
::: {.card-header}
🔧 **00주차라는 이름 괜찮을까요?**
  :::
  ::: {.card-body}

**Gábor**:

"이 결정에 어려움을 겪고 있습니다. 00주차로 추가해야 할까요, 아니면 모든 주차(01-->02 등)의 이름을 바꾸고 이것을 01주차로 해야 할까요? 어떻게 생각하세요?"**

**Claude:**

몇 가지 실용적이고 교육적인 이유로 **00주차로 유지**하는 것이 좋습니다.

## ✅ **00주차 찬성론:**

**실용적인 이점:**
- **중단 없음:** 기존의 모든 번호 매기기, 과제, 내부 링크를 그대로 유지합니다.
- **작업량 감소:** 전체에서 참조를 업데이트하는 오류 발생 가능성이 있는 작업을 피합니다.
- **유연성:** AI 코딩 경험이 풍부한 학생은 잠재적으로 건너뛰거나 대충 볼 수 있습니다.

**교육적 논리:**
- **일반적인 관례:** 00주차는 CS 과정에서 "설정" 콘텐츠의 표준입니다.
- **명확한 신호:** "이것은 선택 사항이 아닌 기초 준비입니다."
- **진입점 유연성:** 학생들은 자신의 준비 상태를 평가할 수 있습니다.

## 🎯 **00주차를 필수적으로 느끼게 만들기:**

**과정 설명/강의 계획서:**
- "00주차 (필수): AI 지원 코딩 기초"
- "이후 모든 주차를 위한 필수 준비"

**01주차 소개:**
- "이 과정은 00주차에서 다룬 AI 코딩 도구에 익숙하다고 가정합니다."
- 학생들이 준비를 완료했는지 간략하게 요약/확인합니다.

**상호 참조:**
- 다른 주차 전체에서 00주차 기술로 다시 연결합니다.
- "00주차의 프롬프트 전략에서 다루었듯이..."

## ⚖️ **대안적 고려 사항:**

번호를 다시 매기는 것을 고려할 유일한 이유는 학생들이 지속적으로 00주차를 건너뛰고 어려움을 겪는 경우입니다. 하지만 다음과 같이 해결할 수 있습니다.
- 중요성에 대한 명확한 의사소통
- 01주차의 빠른 역량 확인
- 00주차 내용을 과제의 전제 조건으로 만들기

**권장 사항:** 00주차부터 시작하여 실제로 어떻게 작동하는지 확인하고 필요한 경우 나중에 번호를 다시 매깁니다. 전체 번호 다시 매기기를 취소하는 것보다 00→01로 이동하는 것이 훨씬 쉽습니다.

학생 행동에 대한 직감은 어떻습니까? "00주차"라고 표시된 것을 건너뛸까요?

:::
:::
